import './doc.define';
declare const _default: {
    id?: import("@storybook/types").ComponentId;
    play?: import("@storybook/types").PlayFunction<import("@atomico/storybook/types").Render, unknown>;
    parameters?: import("@storybook/types").Parameters;
    title: import("@storybook/types").ComponentTitle;
    includeStories?: RegExp | string[];
    excludeStories?: RegExp | string[];
    component?: unknown;
    subcomponents?: Record<string, unknown>;
    decorators?: import("@storybook/types").DecoratorFunction<import("@atomico/storybook/types").Render, {}> | import("@storybook/types").DecoratorFunction<import("@atomico/storybook/types").Render, {}>[];
    loaders?: import("@storybook/types").LoaderFunction<import("@atomico/storybook/types").Render, unknown> | import("@storybook/types").LoaderFunction<import("@atomico/storybook/types").Render, unknown>[];
    beforeEach?: ((context: import("@storybook/types").StoryContext<import("@atomico/storybook/types").Render, unknown>) => void | (() => unknown) | PromiseLike<void | (() => unknown)>) | ((context: import("@storybook/types").StoryContext<import("@atomico/storybook/types").Render, unknown>) => void | (() => unknown) | PromiseLike<void | (() => unknown)>)[];
    render?: import("@storybook/types").ArgsStoryFn<import("@atomico/storybook/types").Render, unknown>;
    tags?: import("@storybook/types").Tag[];
    argTypes?: import("@atomico/storybook/types").ArgTypes;
    args?: unknown;
};
export default _default;
export declare const StoreProvider: () => any;
export declare const DocSynced: () => any;
export declare const ProgrammaticProvider: () => any;
